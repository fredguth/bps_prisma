generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views", "driverAdapters"]
}

// generator docs {
//   provider = "node node_modules/prisma-docs-generator"
//   output   = "../docs"
// }

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Compra {
  id               Int      @id @unique @default(autoincrement())
  data             DateTime
  modalidade       String
  tipo             String
  cnpj_instituicao String
  Item             Item[]

  @@index([data])
}

// model Produto {
//   id              Int      @id @unique @default(autoincrement())
//   cnpj_fabricante String
//   nome            String
//   susbstancia     String
//   embalagem       String
//   codigobr        String
//   unidade         String
//   qtd_embalagem   Int
//   registro_anvisa String
//   material_id     Int
//   Item            Item[]
//   material        Material @relation(fields: [material_id], references: [id], onDelete: Cascade)
//   fabricante      PJ       @relation(fields: [cnpj_fabricante], references: [cnpj], onDelete: Cascade)
// }

model Item {
  id              Int      @id @default(autoincrement())
  compra_id       Int
  anvisa          String?
  cnpj_fornecedor String
  cnpj_fabricante String
  qtde            BigInt
  unitario        Float
  licitacao       String?
  NF              String?
  material_id     Int
  //produto_id      Int
  // produto         Produto  @relation(fields: [produto_id], references: [id], onDelete: Cascade)
  material        Material @relation(fields: [material_id], references: [id], onDelete: Cascade)
  fabricante      PJ       @relation("Fabricante", fields: [cnpj_fabricante], references: [cnpj], onDelete: Cascade)
  fornecedor      PJ       @relation("Fornecedor", fields: [cnpj_fornecedor], references: [cnpj], onDelete: Cascade)
  compra          Compra   @relation(fields: [compra_id], references: [id], onDelete: Cascade)

  @@index([material_id])
}

model PJ {
  cnpj            String  @id
  razao_social    String
  // ibge            String?
  municipio       String?
  uf              String?
  fabricanteItems Item[]  @relation("Fabricante")
  fornecedorItems Item[]  @relation("Fornecedor")
  // Produto         Produto[]
}

model Material {
  id         Int    @id @unique @default(autoincrement())
  codigobr   String
  unidade    String
  classe     String
  pdm        String
  descricao  String
  disponivel Int    @default(dbgenerated("true"))
  Item       Item[]
  // Produto    Produto[]
}

model User {
  id            String         @id @unique
  cpf           String         @unique
  email         String?        @unique
  name          String?
  phone         String?
  sessions      Session[]
  oauthAccounts OauthAccount[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@index([userId])
}

model OauthAccount {
  providerId     String
  providerUserId String
  userId         String
  user           User   @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@id([providerId, providerUserId])
}

view ItensCompra {
  id               Int      @unique
  data             DateTime
  cnpj_instituicao String
  instituicao      String?
  municipio        String?
  uf               String?
  compra_id        Int
  modalidade       String
  tipo             String
  licitacao        String?
  materials_id     Int
  cnpj_fornecedor  String?
  fornecedor       String?
  NF               String?
  cnpj_fabricante  String?
  fabricante       String?
  anvisa           String?
  material_id      Int
  qtde             BigInt
  unitario         Float
}
